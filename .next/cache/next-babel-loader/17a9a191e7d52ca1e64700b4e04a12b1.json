{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/seokje/Code/corona-virus-react-hooks/components/CountrySelector.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport useStats from \"../utils/useStats\";\nexport default function CountrySeletor() {\n  var countries = useStats(\"https://covid19.mathdro.id/api/countries\");\n  if (!countries) return __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6\n    },\n    __self: this\n  }, \"Loading..\");\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, __jsx(\"select\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, Object.entries(countries.countries).map(function (_ref) {\n    var _ref2 = _slicedToArray(_ref, 2),\n        country = _ref2[0],\n        code = _ref2[1];\n\n    __jsx(\"option\", {\n      key: code,\n      value: code,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10\n      },\n      __self: this\n    }, country);\n  })));\n}","map":{"version":3,"sources":["/Users/seokje/Code/corona-virus-react-hooks/components/CountrySelector.js"],"names":["useStats","CountrySeletor","countries","Object","entries","map","country","code"],"mappings":";;;;AAAA,OAAOA,QAAP,MAAqB,mBAArB;AAEA,eAAe,SAASC,cAAT,GAA0B;AACvC,MAAMC,SAAS,GAAGF,QAAQ,CAAC,0CAAD,CAA1B;AAEA,MAAI,CAACE,SAAL,EAAgB,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAP;AAChB,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAASC,MAAM,CAACC,OAAP,CAAeF,SAAS,CAACA,SAAzB,EAAoCG,GAApC,CAAwC,gBAAqB;AAAA;AAAA,QAAnBC,OAAmB;AAAA,QAAVC,IAAU;;AACpE;AAAQ,MAAA,GAAG,EAAEA,IAAb;AAAmB,MAAA,KAAK,EAAEA,IAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAiCD,OAAjC;AACD,GAFQ,CAAT,CADF,CADF;AAOD","sourcesContent":["import useStats from \"../utils/useStats\";\n\nexport default function CountrySeletor() {\n  const countries = useStats(\"https://covid19.mathdro.id/api/countries\");\n\n  if (!countries) return <p>Loading..</p>;\n  return (\n    <div>\n      <select>{Object.entries(countries.countries).map(([country, code]) => {\n        <option key={code} value={code}>{country}</option>\n      })}</select>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}